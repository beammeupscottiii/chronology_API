07. 20. 2022
@1748 Added update and delete endpoints for post, using patch and delete methods, respectively. 

07. 16. 2022
@1022 the tags dont update if i send back the names instead of the IDs , so ill either have to rewrite the current updating function, or write a new one somewhere to convert the IDs into their names.

07. 12. 2022
@1205 edited tags functionality so that names of tags are returned instead of id's
and content doesnt need to be required for a post

07. 08. 2022
@1348 controller for returning all posts with certain criteria works as intended.
there may be an issue with creating posts that have the "admin" tag? im not sure what the true underlying issue is there.

next: work on function on Front end to display all posts as list items (also links?) and display the date when theres a change between post days 

07. 07. 2022
@1210 issue regarding endpoint fixed. Changed code for getting single post to use query instead of parameter

@1017 New endpoint for getting posts by month and year isnt responding...


07. 05. 2022
@1138 See notes.txt in /gears concerning need for new fields in boolean.

    will have "usePostedByBoolean" that determines whether "postedBy" fields get created for an entry or event. 
    
    if "usePostedByDate" is false for a post,
    it should have setEvent_ fields set and utilized. entries should always have "usePostedByDate" as true. 

06. 27. 2022
@1057 It all works as intended.
      will stress test to ensure it works with new tags and such. 

@1004 Weve finally managed to get the tags ID and have access to them in the main route ðŸ˜­. The hold up was due to lack of more in depth knowledge of promises await / async. 
    to be fair, the async await async await pattern runs 4 levels deep (._.
    anyhow, PROGRESS !!!
    I should now be able to save the post to each tags array and have the tags saved to the post. it only took like a week or so to get this far (._.

06. 24. 2022
@1735 trying to deal with one part of the tags in middleware function. 
    or could run it as external function within Model.pre('save', and have the array the tag ids get saved to added to the newPost doc being saved. 
    

@0801 why do tags in array display as their tags model instead of simply as strings?
    no progress as of yet.
    
    try a promise? 

06. 23. 2022
@1624 Still having issue where new tag's array doesnt get added to the post. and the array is still empty within the database

    this project isnt moving at a very 
    significant rate here at all. i am unable 
    to implement a vital feature into the API
    and im stubborn about continuing with out 
    it. May have to put it on the back burner 
    and dedicate less time until this hurdle is
    overcome.....

@1617 During the post creation process, all tags are being added. however, the new document doesnt save with the array filled.

@1025 pre existing tags get added, unable to catch name of non pre existing tag out of loop.
    make new loop just for the non pre existing?
    then verify posts are actually getting their tags array filled...
    might add that to getIndividualPost route
    
    
@0929 i may have to make another other function for when a newTag needs to be created ðŸ¥²
@0901 need to ensure non preexisting tags are saved before second loop starts looking for them. 


06. 20. 2022
@2021 still unable to push tags id into newPost tags ObjectId array (._. 

@1103 added await to first newPost.save()
will see if it works later...

@1055 removing the addition save() for newPosts fixes that parallel save issue, but am getting error message for line 47 in routes/posts despite the tag actually getting the post id saved. 

@1032 a little more progress, wasnt saving the documents correctly before. now being told that .save(); cant be run multiple times 

@1025 Alright so the whole tags thing doesnt work flawlessly. have to ensure the tags code runs after the post has been saved successfully, so that we have access to it for the operations. 


@0806 checking the database, it seems as though my implementation for the tags did actually work! must doubly confirm, of course - but the posts and corresponding tags are present. even better, only the two tags exists, with multiple duplicate posts, meaning the code works thoroughly as intended. 

06. 15. 2022
@1123 No progress

06. 15. 2022
@1655 User login now works as intended. The issue was so small ðŸ˜©ðŸ˜­
    now having issue with the tags, post thing...

06. 13. 2022
@2141 currently having issues with the JWT signing. the returned JWT doesnt include the values I signed it with. may be an issue in how I am implementing it. will check some tutorial or the docs again

06. 10. 2022
@1027 Post Model Schema to be created next, along
      with middleware to parse text. Pretty much
      would like to make sure new lines are kept
      and that bold and italics can be used 

      postRoutes should be createPost, getPost.
      delete and editPost as well. editPost should
      return text to the user facing form (using 
      front end code)
